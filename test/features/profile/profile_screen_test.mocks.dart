// Mocks generated by Mockito 5.4.6 from annotations
// in gamified_tax_deduction/test/features/profile/profile_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:gamified_tax_deduction/core/database/database_helper.dart'
    as _i2;
import 'package:gamified_tax_deduction/core/models/user_profile.dart' as _i3;
import 'package:gamified_tax_deduction/core/services/profile_service.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeDatabaseHelper_0 extends _i1.SmartFake
    implements _i2.DatabaseHelper {
  _FakeDatabaseHelper_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserProfile_1 extends _i1.SmartFake implements _i3.UserProfile {
  _FakeUserProfile_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileService extends _i1.Mock implements _i4.ProfileService {
  MockProfileService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DatabaseHelper get dbHelper => (super.noSuchMethod(
        Invocation.getter(#dbHelper),
        returnValue: _FakeDatabaseHelper_0(
          this,
          Invocation.getter(#dbHelper),
        ),
      ) as _i2.DatabaseHelper);

  @override
  _i5.Future<void> saveProfile(_i3.UserProfile? profile) => (super.noSuchMethod(
        Invocation.method(
          #saveProfile,
          [profile],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.UserProfile?> getProfile() => (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [],
        ),
        returnValue: _i5.Future<_i3.UserProfile?>.value(),
      ) as _i5.Future<_i3.UserProfile?>);

  @override
  _i5.Future<_i3.UserProfile> getOrCreateProfile() => (super.noSuchMethod(
        Invocation.method(
          #getOrCreateProfile,
          [],
        ),
        returnValue: _i5.Future<_i3.UserProfile>.value(_FakeUserProfile_1(
          this,
          Invocation.method(
            #getOrCreateProfile,
            [],
          ),
        )),
      ) as _i5.Future<_i3.UserProfile>);
}
